{
  "version": 3,
  "sources": ["../../../src/services/users/users.js"],
  "sourcesContent": ["import { db } from 'src/lib/db'\n\nexport const createUser = async ({ input }) => {\n  const {\n    name,\n    email,\n    hashedPassword,\n    salt,\n    resetToken,\n    resetTokenExpiresAt,\n    newsGeneral,\n    newsBusiness,\n    newsEntertainment,\n    newsHealth,\n    newsScience,\n    newsSports,\n    newsTechnology,\n  } = input\n\n  return await db.user.create({\n    data: {\n      name,\n      email,\n      hashedPassword,\n      salt,\n      resetToken,\n      resetTokenExpiresAt,\n      newsGeneral,\n      newsBusiness,\n      newsEntertainment,\n      newsHealth,\n      newsScience,\n      newsSports,\n      newsTechnology,\n    },\n  })\n}\n\nexport const updateUser = async ({ id, input }) => {\n  const {\n    name,\n    email,\n    hashedPassword,\n    salt,\n    resetToken,\n    resetTokenExpiresAt,\n    newsGeneral,\n    newsBusiness,\n    newsEntertainment,\n    newsHealth,\n    newsScience,\n    newsSports,\n    newsTechnology,\n  } = input\n\n  return await db.user.update({\n    where: { id },\n    data: {\n      name,\n      email,\n      hashedPassword,\n      salt,\n      resetToken,\n      resetTokenExpiresAt,\n      newsGeneral,\n      newsBusiness,\n      newsEntertainment,\n      newsHealth,\n      newsScience,\n      newsSports,\n      newsTechnology,\n    },\n  })\n}\n\nexport const fetchUserbyId = async ({ id }) => {\n  return db.user.findUnique({ where: { id: id } })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;;;gBAAW;AAEJ,MAAMA,aAAa,OAAO;EAAEC;AAAM,MAAM;AAC7C,QAAM;IACJC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACF,IAAIb;AAEJ,SAAO,MAAMc,aAAGC,KAAKC,OAAO;IAC1BC,MAAM;MACJhB;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACF;EACF,CAAC;AACH;AAEO,MAAMK,aAAa,OAAO;EAAEC;EAAInB;AAAM,MAAM;AACjD,QAAM;IACJC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACF,IAAIb;AAEJ,SAAO,MAAMc,aAAGC,KAAKK,OAAO;IAC1BC,OAAO;MAAEF;IAAG;IACZF,MAAM;MACJhB;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACF;EACF,CAAC;AACH;AAEO,MAAMS,gBAAgB,OAAO;EAAEH;AAAG,MAAM;AAC7C,SAAOL,aAAGC,KAAKQ,WAAW;IAAEF,OAAO;MAAEF;IAAO;EAAE,CAAC;AACjD;",
  "names": ["createUser", "input", "name", "email", "hashedPassword", "salt", "resetToken", "resetTokenExpiresAt", "newsGeneral", "newsBusiness", "newsEntertainment", "newsHealth", "newsScience", "newsSports", "newsTechnology", "db", "user", "create", "data", "updateUser", "id", "update", "where", "fetchUserbyId", "findUnique"]
}
